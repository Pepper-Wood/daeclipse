swagger: "2.0"
info:
  description: "This is the unofficial documentation for the internal DeviantArt Eclipse API endpoints, also referred to as 'NAPI' based on the URLs."
  version: "1.0.0"
  title: "DeviantArt Eclipse"
host: "www.deviantart.com"
basePath: "/_napi/shared_api"
schemes:
- "https"
paths:
  /deviation/extended_fetch:
    get:
      tags:
      - "Deviations"
      summary: "Get extended information for a Deviation."
      description: ""
      operationId: "getDeviationExtended"
      consumes:
      - "application/json"
      parameters:
        - name: "deviationid"
          in: "query"
          description: "Deviation ID to fetch."
          required: true
          type: "number"
        - name: "username"
          in: "query"
          description: "Deviation's artist username."
          required: true
          type: "string"
        - name: "type"
          in: "query"
          description: "Type of extended information to fetch."
          required: true
          type: "string"
          enum: ["art"]
        - name: "include_session"
          in: "query"
          description: "TBD" #TODOO!!!!!!!
          required: true
          type: boolean
      responses:
        "200":
          description: "Successfully fetched extended deviation information."
          schema:
            $ref: "#/definitions/DeviationExtended"
  /deviation/delete:
    post:
      tags:
      - "Deviations"
      - "Journals"
      summary: "Delete a deviation or journal."
      description: ""
      operationId: "deleteDeviationOrJournal"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF Token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            deviationid:
              type: integer
              example: 123456789
      responses:
        '200':
          description: "Successfully deleted deviation or journal."
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
  /journal/create:
    post:
      tags:
      - "Journals"
      summary: "Create a journal."
      description: ""
      operationId: "createJournal"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            editorRaw:
              type: "string"
              description: "Journal body text with formatting information, stored as a string of a json object. See EditorRaw definition for object pre-stringify."
              example: "{\"blocks\":[{\"key\":\"foo\",\"text\":\"This is an example journal main content.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":11,\"length\":7,\"style\":\"BOLD\"},{\"offset\":19,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":27,\"length\":4,\"style\":\"UNDERLINE\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}"
            title:
              type: string
              description: "Journal title"
              example: "This is an example title."
      responses:
        "200":
          description: "Journal successfully created."
  /journal/update/content:
    post:
      tags:
      - "Journals"
      summary: "Update a journal."
      description: ""
      operationId: "updateJournal"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            editorRaw:
              type: "string"
              description: "Journal body text with formatting information, stored as a string of a json object. See EditorRaw definition for object pre-stringify."
              example: "{\"blocks\":[{\"key\":\"foo\",\"text\":\"This is an example journal main content.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":11,\"length\":7,\"style\":\"BOLD\"},{\"offset\":19,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":27,\"length\":4,\"style\":\"UNDERLINE\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}"
            title:
              type: string
              description: "Journal title"
              example: "This is an example title."
      responses:
        "200":
          description: "Journal successfully created."
  /journal/publish:
    post:
      tags:
      - "Journals"
      summary: "Publish a created journal."
      description: ""
      operationId: "publishJournal"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            deviationid:
              type: "integer"
              description: "DeviationID of the created journal."
              example: 1234567890123456
            featured:
              type: boolean
              description: "Whether journal is featured."
              example: false
      responses:
        "200":
          description: "Journal successfully published."
  /deviation/groups:
    get:
      tags:
      - "Groups"
      summary: "Get a list of groups associated with the logged-in user."
      description: ""
      operationId: "getGroups"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
        - name: "limit"
          in: "query"
          description: "The number of groups to return."
          required: true
          type: "number"
      responses:
        "200":
          description: "Successfully fetched a list of DeviantArt groups."
          schema:
            $ref: "#/definitions/Groups"
  /deviation/group_folders:
    get:
      tags:
      - "Groups"
      summary: "Get the list of folders associated with a group."
      description: ""
      operationId: "getGroupFolders"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
        - name: "groupid"
          in: "query"
          description: "Group ID to query for folder list."
          required: true
          type: "number"
        - name: "type"
          in: "query"
          description: "Type of folder to return, either 'gallery' folders or 'favorites' folders."
          required: true
          type: "string"
          enum: ["gallery", "collection"]
      responses:
        "200":
          description: "Successfully fetched the list of folders for the DeviantArt group."
          schema:
            $ref: "#/definitions/GroupFolders"
  /deviation/group_add:
    post:
      tags:
      - "Groups"
      summary: "Add deviation to a specified group and folder."
      description: ""
      operationId: "addDeviationToGroup"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            deviationid:
              example: 123456789
            folderid:
              example: 12345678
            groupid:
              example: 12345678
            'type':
              type: string
              enum: ["gallery", "collection"]
              example: "gallery"
      responses:
        '200':
          description: "Successfully fetched the list of folders for the DeviantArt group."
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              needsVote:
                type: boolean
                example: false
              deviationGroupCount:
                type: integer
                example: 1
  /status/create:
    post:
      tags:
      - "Statuses"
      summary: "Create a status"
      description: ""
      operationId: "createStatus"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            editorRaw:
              type: "string"
              description: "Status message text with formatting information, stored as a string of a json object. See EditorRaw definition for object pre-stringify."
              example: "{\"blocks\":[{\"key\":\"foo\",\"text\":\"This is an example status message with all basic formatting options.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":11,\"length\":7,\"style\":\"UNDERLINE\"},{\"offset\":39,\"length\":3,\"style\":\"BOLD\"},{\"offset\":49,\"length\":10,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}"
      responses:
        "200":
          description: "Status message successfully created."
  /status/delete:
    post:
      tags:
      - "Statuses"
      summary: "Delete a status"
      description: ""
      operationId: "deleteStatus"
      consumes:
      - "application/json"
      - "text/plain"
      - "*/*"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            csrf_token:
              type: "string"
              description: "CSRF Token"
              example: "AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv"
            statusid:
              type: "integer"
              format: "int64"
              description: "Status message ID"
              example: 12345678
            userid:
              type: "integer"
              format: "int64"
              description: "DeviantArt User ID"
              example: 12345678
      responses:
        "200":
          description: "Status message successfully deleted."
definitions:
  Comment:
    type: object
    properties:
      commentId:
        type: number
        example: 4915217527
      typeId:
        type: number
        example: 1
      itemId:
        type: number
        example: 876175627
      parentId:
        type: number
        example: null
      posted:
        type: string
        example: "2021-04-19T09:04:27-0700"
      edited:
        type: string
        example: null
      replies:
        type: integer
        example: 0
      isOwner:
        type: boolean
        example: false
      isViolation:
        type: boolean
        example: false
      isAdminHidden:
        type: boolean
        example: false
      isHidden:
        type: boolean
        example: false
      isLocked:
        type: boolean
        example: false
      isSpam:
        type: boolean
        example: false
      isPrivate:
        type: boolean
        example: false
      isAnnotation:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
      isPeekable:
        type: boolean
        example: false
      isAuthor:
        type: boolean
        example: false
      isAuthorHighlighted:
        type: boolean
        example: false
      isAdminMode:
        type: boolean
        example: false
      isFeatured:
        type: boolean
        example: false
      isReportable:
        type: boolean
        example: false
      isLIked:
        type: boolean
        example: false
      likes:
        type: number
        example: 0
      hidden:
        type: boolean
        example: null
      textContent:
        type: object
        properties:
          excerpt:
            type: string
            example: ""
          html:
            type: object
            properties:
              "type":
                type: string
                example: "writer"
              markup:
                type: string
                example: "She looks amazing"
              features:
                type: string
                example: ""
      signature:
        type: string
        example: null
      authorInfo:
        type: string
        example: null
      user:
        type: object
        properties:
          userId:
            type: number
            example: 66221344
          userUuid:
            type: string
            example: "1363555f-a72f-4e84-a1cc-e4a73da41fb6"
          username:
            type: string
            example: "01gu"
          usericon:
            type: string
            example: "https://a.deviantart.net/avatars-big/default.gif"
          usericonDefault:
            type: boolean
            example: true
          "type":
            type: string
            example: "regular"
          isWatching:
            type: boolean
            example: false
          isNewDeviant:
            type: boolean
            example: true
      legacyTextEditUrl:
        type: string
        example: null
  DeviationExtended:
    type: object
    properties:
      deviation:
        type: object # TODO
      viewMode:
        type: string
        example: "regular"
      comments:
        type: object
        properties:
          hasMore:
            type: boolean
            example: true
          hasLess:
            type: boolean
            example: false
          nextOffset:
            type: integer
            example: 24
          cursor:
            type: string
            example: "4913988710+"
          prevCursor:
            type: string
            example: null
          total:
            type: integer
            example: 57
          canPostComment:
            type: boolean
            example: true
          commentableTypeid:
            type: integer
            example: 1
          commentableItemid:
            type: integer
            example: 876175627
          thread:
            type: array
            items:
              $ref: "#/definitions/Comment"
  Groups:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Group"
      cursor:
        type: string
        example: "NTkwYWNhZDA9MTQmZDBhM2M5NDI9MTcxMTUyMzQtMjc4MTg1NzEtMjA5OTM2NzctMjE0ODI1NDQtMjE0MTEwNjQtMTQ3MTgyOTItMTgzOTY2OTktMjgyMTIwMzEtMTMxMTQ5NTEtMjU3NTAwMDM"
  Group:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
        example: 12345678
      useridUuid:
        type: string
        format: uuid
        example: "a1b2c3e4-f5g6-h7i8-j9k0-l1m2n3o4p5q6"
      username:
        type: "string"
        example: "ExampleGroupName"
      usericon:
        type: "string"
        example: "https://a.deviantart.net/avatars-big/p/m/examplegroupname.gif?1"
      'type':
        type: "string"
        enum: ["group", "super group"]
      isWatching:
        type: boolean
        example: false
      isNewDeviant:
        type: boolean
        example: false
  GroupFolders:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/GroupFolder"
  GroupFolder:
    type: "object"
    properties:
      folderId:
        type: integer
        example: 12345678
      gallectionUuid:
        type: string
        format: uuid
        example: "A1B2C3E4-F5G6-H7I8-J9K0-L1M2N3O4P5Q6"
      parentId:
        type: integer
        example: null
      'type':
        type: string
        description: "The category the group folders belong to."
        enum: ["gallery", "collection"]
        example: "gallery"
      name:
        type: string
        example: "Featured"
      description:
        type: string
        example: "Example folder description."
      owner:
        $ref: "#/definitions/Group"
      commentCount:
        type: integer
        example: 0
      size:
        type: integer
        example: 0
      thumb:
        type: string
        example: null
      hasSubFolders:
        type: string
        example: false
      totalItemCount:
        type: integer
        example: 0
  EditorRaw:
    type: object
    properties:
      blocks:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              example: "foo"
            text:
              example: "This is an example text body."
            'type':
              type: string
              example: "unstyled"
            depth:
              type: integer
              example: 0
            inlineStyleRanges:
              type: array
              items:
                type: object
                properties:
                  offset:
                    type: integer
                    description: "Index of string where styling starts."
                    example: 1
                  length:
                    type: integer
                    description: "Length of string where styling is applied."
                    example: 1
                  style:
                    type: string
                    description: "Type of styling applied to substring."
                    enum: ["BOLD", "ITALIC", "UNDERLINE"]
                    example: "UNDERLINE"
            entityRanges:
              type: array
            data:
              type: array
      entityMap:
        type: object
