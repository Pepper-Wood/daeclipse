openapi: 3.0.0
info:
  version: 1.0.0
  title: DeviantArt Eclipse
  description: Unofficial OpenAPI Specification for the DeviantArt Eclipse API.
  license:
    name: MIT
  contact:
    name: 'Kathryn DiPippo (for spec updates, not API feature updates)'
    url: 'https://kathryndipippo.com'
    email: dipippo.k@gmail.com
servers:
  - url: 'https://www.deviantart.com/_napi/shared_api'
tags:
  - name: Deviations
    description: 'Operations relating to artwork posts, Deviations.'
  - name: Groups
    description: Operations relating to DeviantArt Groups.
  - name: Journals
    description: 'Operations relating to blog posts, Journals.'
  - name: Statuses
    description: 'Operations relating to tweet-like posts, Statuses.'
paths:
  /deviation/extended_fetch:
    get:
      summary: Get extended information for a Deviation.
      operationId: getExtendedDeviationByID
      description: Extended information for a specific Deviation.
      tags:
        - Deviations
      parameters:
        - $ref: '#/components/parameters/deviationId'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/extendedFetchType'
        - $ref: '#/components/parameters/extendedFetchIncludeSession'
      responses:
        '200':
          description: Successfully fetched extended deviation information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviationExtendedResult'
  /deviation/delete:
    post:
      summary: Delete a deviation or journal.
      operationId: deleteDeviationOrJournal
      description: Delete a deviation or journal.
      tags:
        - Deviations
        - Journals
      requestBody:
        description: Body for deleting deviation or journal.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF Token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                deviationid:
                  type: integer
                  example: 123456789
      responses:
        '200':
          description: Successfully fetched extended deviation information.
  /journal/create:
    post:
      summary: Create a journal.
      operationId: createJournal
      description: Create a journal.
      tags:
        - Journals
      requestBody:
        description: Body for creating a journal.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                editorRaw:
                  type: string
                  description: Journal body as stringified draft-js payload.
                  example: '{"blocks":[{"key":"foo","text":"This is an example journal main content.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":11,"length":7,"style":"BOLD"},{"offset":19,"length":7,"style":"ITALIC"},{"offset":27,"length":4,"style":"UNDERLINE"}],"entityRanges":[],"data":{}}],"entityMap":{}}'
                title:
                  type: string
                  description: Journal title
                  example: This is an example title.
      responses:
        '200':
          description: Journal successfully created.
  /journal/update/content:
    post:
      summary: Update a journal.
      description: Update a journal.
      operationId: updateJournal
      tags:
        - Journals
      requestBody:
        description: Body for updating a journal.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                editorRaw:
                  type: string
                  description: Journal body as stringified draft-js payload.
                  example: '{"blocks":[{"key":"foo","text":"This is an example journal main content.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":11,"length":7,"style":"BOLD"},{"offset":19,"length":7,"style":"ITALIC"},{"offset":27,"length":4,"style":"UNDERLINE"}],"entityRanges":[],"data":{}}],"entityMap":{}}'
                title:
                  type: string
                  description: Journal title
                  example: This is an example title.
      responses:
        '200':
          description: Journal successfully updated.
  /journal/publish:
    post:
      tags:
        - Journals
      summary: Publish a created journal.
      description: Publish a created journal.
      operationId: publishJournal
      requestBody:
        description: Body for deleting deviation or journal.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                deviationid:
                  type: integer
                  description: DeviationID of the created journal.
                  example: 1234567890123456
                featured:
                  type: boolean
                  description: Whether journal is featured.
                  example: false
      responses:
        '200':
          description: Journal successfully published.
  /deviation/groups:
    get:
      tags:
        - Groups
      summary: Get a list of groups associated with the logged-in user.
      description: Get a list of groups associated with the logged-in user.
      operationId: getGroups
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Successfully fetched a list of DeviantArt groups.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Gruser'
                  cursor:
                    type: string
                    example: NTkwYWNhZDA9MTQmZDBhM2M5NDI9MTcxMTUyMzQtMjc4MTg1NzEtMjA5OTM2NzctMjE0ODI1NDQtMjE0MTEwNjQtMTQ3MTgyOTItMTgzOTY2OTktMjgyMTIwMzEtMTMxMTQ5NTEtMjU3NTAwMDM
  /deviation/group_folders:
    get:
      tags:
        - Groups
      summary: Get the list of folders associated with a group.
      description: Get the list of folders associated with a group.
      operationId: getGroupFolders
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/groupFolderType'
      responses:
        '200':
          description: Successfully fetched the list of folders for the DeviantArt group.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        folderId:
                          type: integer
                          example: 12345678
                        gallectionUuid:
                          type: string
                          format: uuid
                          example: 15A01024-5565-4736-AB66-E3E5DB890868
                        parentId:
                          type: integer
                          nullable: true
                          example: null
                        type:
                          type: string
                          description: The category the group folders belong to.
                          enum:
                            - gallery
                            - collection
                          example: gallery
                        name:
                          type: string
                          example: Featured
                        description:
                          type: string
                          example: Example folder description.
                        owner:
                          $ref: '#/components/schemas/Gruser'
                        commentCount:
                          type: integer
                          example: 0
                        size:
                          type: integer
                          example: 0
                        thumb:
                          type: string
                          nullable: true
                          example: null
                        hasSubFolders:
                          type: boolean
                          example: false
                        totalItemCount:
                          type: integer
                          example: 0
  /deviation/group_add:
    post:
      tags:
        - Groups
      summary: Add deviation to a specified group and folder.
      description: Add deviation to a specified group and folder.
      operationId: addDeviationToGroup
      requestBody:
        description: Body for adding deviiation to a specified group and folder.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                deviationid:
                  example: 123456789
                folderid:
                  example: 12345678
                groupid:
                  example: 12345678
                type:
                  type: string
                  enum:
                    - gallery
                    - collection
                  example: gallery
      responses:
        '200':
          description: Successfully added Deviation to group in selected folder.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  needsVote:
                    type: boolean
                    example: false
                  deviationGroupCount:
                    type: integer
                    example: 1
  /status/create:
    post:
      summary: Create a status.
      description: Create a status as a journal draft in sta.sh.
      operationId: createStatus
      tags:
        - Statuses
      requestBody:
        description: Body for creating a status.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                editorRaw:
                  type: string
                  description: Status content as stringified draft-js payload.
                  example: '{"blocks":[{"key":"foo","text":"This is an example status message with all basic formatting options.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":11,"length":7,"style":"UNDERLINE"},{"offset":39,"length":3,"style":"BOLD"},{"offset":49,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}}],"entityMap":{}}'
      responses:
        '200':
          description: Status message response.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreateOrPublishStatusSuccess'
                  - $ref: '#/components/schemas/ErrorInvalidCSRF'
  /status/publish:
    post:
      tags:
        - Statuses
      summary: Publish a status.
      description: Publish a status.
      operationId: publishStatus
      requestBody:
        description: Body for deleting deviation or journal.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                statusid:
                  type: integer
                  description: Status ID.
                  example: 1111222233334444
      responses:
        '200':
          description: Status message response.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreateOrPublishStatusSuccess'
                  - $ref: '#/components/schemas/ErrorInvalidCSRF'
  /status/delete:
    post:
      tags:
        - Statuses
      summary: Delete a status.
      description: Delete a status.
      operationId: deleteStatus
      requestBody:
        description: Body for deleting a status.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  description: CSRF Token
                  example: AbCdEfGhIjKlMnOp.QrStUv.WxYzAbCdEfGhIjKlMnOpAbCd_EfGhIjKlMnOpQrStUv
                statusid:
                  type: integer
                  format: int64
                  description: Status message ID
                  example: 12345678
                userid:
                  type: integer
                  format: int64
                  description: DeviantArt User ID
                  example: 12345678
      responses:
        '200':
          description: Status message successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
components:
  parameters:
    deviationId:
      in: query
      name: deviation
      description: Deviation ID.
      required: true
      schema:
        type: integer
        example: 123456789
    extendedFetchIncludeSession:
      in: query
      name: include_session
      description: 'Include session, always true.'
      required: true
      schema:
        type: boolean
        example: true
    extendedFetchType:
      in: query
      name: type
      description: 'Extended fetch type, always art.'
      required: true
      schema:
        type: string
        enum:
          - art
    groupFolderType:
      in: query
      name: type
      description: 'Type of folder to return, either ''gallery'' folders or ''favorites'' folders.'
      required: true
      schema:
        type: string
        enum:
          - gallery
          - collection
    groupId:
      in: query
      name: groupid
      description: Group ID to query for folder list.
      required: true
      schema:
        type: number
    limit:
      in: query
      name: limit
      description: The number of groups to return.
      required: true
      schema:
        type: number
    username:
      in: query
      name: username
      description: DeviantArt username.
      required: true
      schema:
        type: string
        maxLength: 20
        example: ExampleUsername
  schemas:
    CreateOrPublishStatusSuccess:
      type: object
      required:
        - deviation
      properties:
        deviation:
          $ref: '#/components/schemas/Status'
    Collection:
      type: object
      required:
        - collection
        - deviations
        - groups
      properties:
        collection:
          type: array
          items:
            $ref: '#/components/schemas/CollectionInfo'
        deviations:
          type: array
          items:
            $ref: '#/components/schemas/Deviation'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Gruser'
    CollectionInfo:
      type: object
      required:
        - folderId
        - gallectionUuid
        - parentId
        - type
        - name
        - description
        - owner
        - commentCount
        - size
        - thumb
      properties:
        folderId:
          type: integer
          example: 23456789
        gallectionUuid:
          type: string
          format: uuid
          example: 15A01024-5565-4736-AB66-E3E5DB890868
        parentId:
          type: integer
          nullable: true
          example: 34567890
        type:
          type: string
          example: collection
        name:
          type: string
          example: Example collection name"
        description:
          type: string
          example: ''
        owner:
          $ref: '#/components/schemas/Gruser'
        commentCount:
          type: integer
          example: 0
        size:
          type: integer
          example: 227
        thumb:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Deviation'
    Comment:
      type: object
      required:
        - commentId
        - typeId
        - itemId
        - parentId
        - posted
        - edited
        - replies
        - isOwner
        - isViolation
        - isAdminHidden
        - isHidden
        - isLocked
        - isSpam
        - isPrivate
        - isAnnotation
        - isDeleted
        - isPeekable
        - isAuthor
        - isAuthorHighlighted
        - isAdminMode
        - isFeatured
        - isReportable
        - isLiked
        - likes
        - hidden
        - textContent
        - signature
        - authorInfo
        - user
        - legacyTextEditUrl
      properties:
        commentId:
          type: integer
          example: 1234567890
        typeId:
          type: integer
          example: 1
        itemId:
          type: integer
          example: 12345678
        parentId:
          type: integer
          nullable: true
          example: 12345678
        posted:
          type: string
          format: date-time
          example: '2021-05-18T12:23:01-0700'
        edited:
          type: string
          nullable: true
          format: date-time
          example: '2021-05-18T12:23:01-0700'
        replies:
          type: integer
          example: 0
        isOwner:
          type: boolean
          example: false
        isViolation:
          type: boolean
          example: false
        isAdminHidden:
          type: boolean
          example: false
        isHidden:
          type: boolean
          example: false
        isLocked:
          type: boolean
          example: false
        isSpam:
          type: boolean
          example: false
        isPrivate:
          type: boolean
          example: false
        isAnnotation:
          type: boolean
          example: false
        isDeleted:
          type: boolean
          example: false
        isPeekable:
          type: boolean
          example: false
        isAuthor:
          type: boolean
          example: false
        isAuthorHighlighted:
          type: boolean
          example: false
        isAdminMode:
          type: boolean
          example: false
        isFeatured:
          type: boolean
          example: false
        isReportable:
          type: boolean
          example: false
        isLiked:
          type: boolean
          example: false
        likes:
          type: integer
          example: 0
        hidden:
          type: integer
          nullable: true
        textContent:
          $ref: '#/components/schemas/TextContent'
        signature:
          type: string
          nullable: true
        authorInfo:
          type: string
          nullable: true
          example: Hobbyist Traditional Artist
        user:
          $ref: '#/components/schemas/Gruser'
        legacyTextEditUrl:
          type: string
          nullable: true
    CommentsList:
      type: object
      required:
        - hasMore
        - hasLess
        - nextOffset
        - cursor
        - prevCursor
        - total
        - canPostComment
        - commentableTypeid
        - commentableItemid
        - thread
      properties:
        hasMore:
          type: boolean
          example: false
        hasLess:
          type: boolean
          example: false
        nextOffset:
          type: integer
          nullable: true
          example: 24
        cursor:
          example: 4913988710+
        prevCursor:
          type: string
          nullable: true
          example: 4913988710+
        total:
          type: integer
          example: 57
        canPostComment:
          type: boolean
          example: true
        commentableTypeid:
          type: integer
          example: 1
        commentableItemid:
          type: integer
          example: 123456789
        thread:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    Deviation:
      type: object
      required:
        - deviationId
        - type
        - typeId
        - printId
        - url
        - title
        - isJournal
        - isVideo
        - isPurchasable
        - isFavouritable
        - publishedTime
        - isTextEditable
        - legacyTextEditUrl
        - isShareable
        - isCommentable
        - isFavourited
        - isDeleted
        - isMature
        - isDownloadable
        - isAntisocial
        - isBlocked
        - isPublished
        - isDailyDeviation
        - hasPrivateComments
        - blockReasons
        - author
        - stats
        - media
      properties:
        deviationId:
          type: integer
          example: 112233445
        type:
          type: string
          example: image
        typeId:
          type: integer
          example: 1
        printId:
          type: integer
          nullable: true
          example: 2
        url:
          type: string
          example: 'https://www.deviantart.com/exampleusername/art/Example-Title-112233445'
        title:
          type: string
          example: Example Title
        isJournal:
          type: boolean
          example: false
        isVideo:
          type: boolean
          example: false
        isPurchasable:
          type: boolean
          example: false
        isFavouritable:
          type: boolean
          example: false
        publishedTime:
          type: string
          format: date-time
          example: '2021-05-18T12:23:01-0700'
        isTextEditable:
          type: boolean
          example: false
        legacyTextEditUrl:
          type: string
          nullable: true
          example: unknown
        isShareable:
          type: boolean
          example: false
        isCommentable:
          type: boolean
          example: false
        isFavourited:
          type: boolean
          example: false
        isDeleted:
          type: boolean
          example: false
        isMature:
          type: boolean
          example: false
        isDownloadable:
          type: boolean
          example: false
        isAntisocial:
          type: boolean
          example: false
        isBlocked:
          type: boolean
          example: false
        isPublished:
          type: boolean
          example: false
        isDailyDeviation:
          type: boolean
          example: false
        hasPrivateComments:
          type: boolean
          example: false
        blockReasons:
          type: array
          items:
            type: string
          example: []
        author:
          $ref: '#/components/schemas/Gruser'
        stats:
          $ref: '#/components/schemas/Stats'
        media:
          $ref: '#/components/schemas/DeviationMedia'
    DeviationAwardedBadge:
      type: object
      required:
        - id
        - typeId
        - name
        - title
        - baseTitle
        - description
        - stackCount
        - images
      properties:
        id:
          type: integer
          example: 123456789
        typeId:
          type: integer
          example: 65
        name:
          type: string
          example: diamond
        title:
          type: string
          example: Diamond
        baseTitle:
          type: string
          example: Diamond
        description:
          type: string
          example: It's the highest of honors to be awarded an exclusive Diamond badge!
        stackCount:
          type: integer
          example: 1
        images:
          type: array
          items:
            type: object
            properties:
              imageUrl:
                type: string
                example: 'https://st.deviantart.net/badges/diamond.svg?2'
              className:
                type: string
                example: ''
    DeviationExtendedContent:
      type: object
      required:
        - deviationUuid
        - canUserAddToGroup
        - groupListUrl
        - description
        - originalFile
        - license
        - download
        - relatedStreams
        - stats
        - reportUrl
        - awardedBadges
      properties:
        deviationUuid:
          type: string
          format: uuid
          example: 656CC452-3566-455C-88FA-72E2CEF38EA2
        canUserAddToGroup:
          type: boolean
          example: true
        groupListUrl:
          type: string
          example: 'https://www.deviantart.com/deviation/112233445/groups'
        description:
          type: string
          example: <div><p>Example description</p></div>
        originalFile:
          $ref: '#/components/schemas/DeviationFileSpecs'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/DeviationTag'
        subjectTags:
          type: array
          items:
            $ref: '#/components/schemas/DeviationTag'
        typeFacet:
          $ref: '#/components/schemas/DeviationTypeFacet'
        license:
          type: string
          enum:
            - none
            - by-nc-nd
        download:
          $ref: '#/components/schemas/DeviationFileSpecs'
        relatedStreams:
          $ref: '#/components/schemas/DeviationRelatedStreams'
        stats:
          $ref: '#/components/schemas/DeviationExtendedStats'
        reportUrl:
          type: string
          example: 'https://www.deviantart.com/deviation/report/112233445?is_modal=true'
        awardedBadges:
          type: array
          items:
            $ref: '#/components/schemas/DeviationAwardedBadge'
    DeviationExtendedResult:
      type: object
      required:
        - deviation
        - viewMode
        - comments
      properties:
        deviation:
          allOf:
            - $ref: '#/components/schemas/Deviation'
            - type: object
              required:
                - extended
              properties:
                extended:
                  $ref: '#/components/schemas/DeviationExtendedContent'
        viewMode:
          type: string
          example: regular
        comments:
          $ref: '#/components/schemas/CommentsList'
    DeviationExtendedStats:
      type: object
      required:
        - views
        - today
        - shares
        - downloads
        - groups
      properties:
        views:
          type: integer
          example: 175039
        today:
          type: integer
          example: 1
        shares:
          type: integer
          example: 0
        downloads:
          type: integer
          example: 183
        groups:
          type: integer
          example: 0
    DeviationFileSpecs:
      type: object
      required:
        - comments
        - favourites
      properties:
        url:
          type: string
          example: 'https://www.deviantart.com/download/886561941/denu3kl-280bcd78-b8fc-4c60-911a-1ca732a2b7a9.jpg?token=feb6d33bc5adba90f6392cc85c64598f52fbb648&ts=1627488080'
        type:
          type: string
          enum:
            - original
        width:
          type: integer
          example: 2480
        height:
          type: integer
          example: 2480
        filesize:
          type: integer
          example: 123456789
    DeviationMedia:
      type: object
      required:
        - types
      properties:
        baseUri:
          type: string
          example: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/49402c4d-1fe3-4f6d-8144-2f58aee8d82d/denu3kl-280bcd78-b8fc-4c60-911a-1ca732a2b7a9.jpg'
        prettyName:
          type: string
          example: example_title_by_exampleusername_denu3kl
        token:
          type: array
          items:
            type: string
          example:
            - eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiO
        types:
          type: array
          items:
            type: object
            properties:
              t:
                type: string
                example: '150'
              r:
                type: integer
                example: 0
              c:
                type: string
                example: 'v1/fit/w_150,h_150,q_70,strp/<prettyName>-150.jpg'
              h:
                type: integer
                example: 0
              w:
                type: integer
                example: 0
    DeviationRelatedStreams:
      type: object
      required:
        - gallery
        - recommended
        - collections
      properties:
        gallery:
          type: array
          items:
            $ref: '#/components/schemas/Deviation'
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Deviation'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
    DeviationTag:
      type: object
      required:
        - name
        - url
      properties:
        name:
          type: string
          example: exampletag
        url:
          type: string
          example: 'https://www.deviantart.com/tag/exampletag'
    DeviationTypeFacet:
      type: object
      required:
        - linkTo
        - urlFragment
        - displayNameEn
      properties:
        linkTo:
          type: string
          example: 'https://www.deviantart.com/deviations/visual-art/'
        urlFragment:
          type: string
          example: visual-art
        displayNameEn:
          type: string
          example: Visual Art
    Gruser:
      type: object
      required:
        - userId
        - useridUuid
        - username
        - usericon
        - type
        - isWatching
        - isNewDeviant
      properties:
        userId:
          type: integer
          example: 12345678
        useridUuid:
          type: string
          format: uuid
          example: 43d8f41c-cdd8-41d2-9878-11e0f77ea0a3
        username:
          type: string
          maxLength: 20
          example: ExampleUsername
        usericon:
          example: 'https://a.deviantart.net/avatars-big/m/o/exampleusername.jpg?4'
        type:
          type: string
          example: regular
        isWatching:
          type: boolean
          example: false
        isNewDeviant:
          type: boolean
          example: true
    Stats:
      type: object
      required:
        - comments
        - favourites
      properties:
        comments:
          type: integer
          example: 18
        favourites:
          type: integer
          example: 2063
    Status:
      allOf:
        - $ref: '#/components/schemas/Deviation'
        - type: object
          required:
            - textContent
          properties:
            textContent:
              $ref: '#/components/schemas/TextContent'
    TextContent:
      type: object
      required:
        - excerpt
        - html
      properties:
        excerpt:
          type: string
          example: |
            Great...:) http://itscash.cf/
        html:
          type: object
          properties:
            type:
              type: string
              example: draft
            markup:
              type: string
              description: Comment content as stringified draft-js payload.
              example: '{"blocks":[{"key":"foo","text":"Great...:) http://itscash.cf/\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":8,"length":3,"key":0},{"offset":11,"length":18,"key":1}],"data":{}}],"entityMap":{"0":{"type":"DA_OFF_EMOTE","mutability":"IMMUTABLE","data":{"emote":":) "}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://itscash.cf/"}}}}'
            features:
              type: string
              example: '[{"type":"FIRST_IMAGE_FEATURE","data":[]},{"type":"IS_EMPTY_FEATURE","data":{"isEmpty":false}},{"type":"MEDIA_COUNT_FEATURE","data":{"emoji":0,"emotes":1,"images":0,"mentions":0,"video":0,"previews":0}},{"type":"WORD_COUNT_FEATURE","data":{"words":4,"chars":28}}]'
    ErrorInvalidCSRF:
      type: object
      required:
        - error
        - errorDescription
        - errorDetails
        - status
      properties:
        error:
          type: string
          example: invalid_request
        errorDescription:
          type: string
          example: Invalid or expired form submission
        errorDetails:
          type: object
          properties:
            csrf:
              type: string
              example: invalid
        status:
          type: string
          example: error
